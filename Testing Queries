

select
    DISTINCT(scores.user_id),
    users.username,
    quizzes.module_id,
    ( SELECT SUM(scores.score) AS total_score FROM scores WHERE scores.user_id = users.user_id GROUP BY scores.user_id ),
    ( SELECT COUNT(questions.question_id) as total_num_questions FROM questions inner join quizzes on questions.quiz_id = quizzes.quiz_id WHERE quizzes.module_id = 'TEST' AND quizzes.is_presented = true),
    ( SELECT CASE WHEN
        (SELECT CAST (COUNT(questions.question_id) AS FLOAT) FROM questions inner join quizzes on questions.quiz_id = quizzes.quiz_id WHERE quizzes.module_id = 'TEST' AND quizzes.is_presented = true) = 0 THEN null
    ELSE
        ( SELECT CAST (SUM(scores.score) AS FLOAT) FROM scores WHERE scores.user_id = users.user_id GROUP BY scores.user_id ) /
        ( SELECT CAST (COUNT(questions.question_id) AS FLOAT) FROM questions inner join quizzes on questions.quiz_id = quizzes.quiz_id WHERE quizzes.module_id = 'TEST' AND quizzes.is_presented = true) * 100 END as average )
from scores
inner join quizzes
    on quizzes.quiz_id = scores.quiz_id
inner join users
    on scores.user_id = users.user_id
inner join questions
    on quizzes.quiz_id = questions.quiz_id
where quizzes.module_id = 'TEST' ORDER BY average DESC;


select
    DISTINCT(scores.user_id),
    users.username,
    quizzes.module_id,
    ( SELECT SUM(scores.score) AS total_score FROM scores WHERE scores.user_id = users.user_id GROUP BY scores.user_id ),
    ( SELECT COUNT(questions.question_id)::float as total_num_questions FROM questions),
    ( SELECT SUM(scores.score)::float  FROM scores WHERE scores.user_id = users.user_id GROUP BY scores.user_id ) /
    ( SELECT COUNT(questions.question_id) FROM questions) * 100 as average,
    3::float / 4::float
from scores
inner join quizzes
    on quizzes.quiz_id = scores.quiz_id
inner join users
    on scores.user_id = users.user_id
inner join questions
    on quizzes.quiz_id = questions.quiz_id
where quizzes.module_id = 'TEST' ORDER BY scores.user_id;



select count(questions.question) from questions inner join quizzes on questions.quiz_id = quizzes.quiz_id WHERE quizzes.module_id = 'TEST';

select questions.question_id, quizzes.module_id, quizzes.quiz_id from questions inner join quizzes on questions.quiz_id = quizzes.quiz_id WHERE quizzes.module_id = 'TEST';

"num_questions": "SELECT COUNT(question_id) FROM questions WHERE quiz_id = ($1);"

( SELECT COUNT(questions.question_id) AS num_questions FROM questions WHERE quizzes.quiz_id = questions.quiz_id GROUP BY questions.quiz_id ),


( SELECT COUNT(questions.question_id) AS num_questions FROM questions WHERE scores.quiz_id = questions.quiz_id GROUP BY questions.quiz_id ),


( SELECT SUM(scores.score) AS total_score FROM scores WHERE scores.user_id = responses.user_id GROUP BY scores.user_id )

 ( SELECT SUM(questions.question_id) AS num_questions FROM questions WHERE quizzes.module_id = 'TEST' GROUP BY questions.quiz_id )

 ( SELECT COUNT(questions.question_id) AS num_questions FROM questions WHERE scores.quiz_id = questions.quiz_id GROUP BY questions.quiz_id )

select sum(score) from scores where user_id = 1;

select scores.user_id, scores.quiz_id, scores.score, modules.module_id from scores inner join modules where modules.module_id = 'TEST';


INSERT INTO responses (user_id, quiz_id, question_id, response) VALUES (1, 1, 1, 'd') ON CONFLICT (user_id, quiz_id, question_id) DO UPDATE SET response = 'd' WHERE (responses.user_id, responses.quiz_id, responses.question_id) = (1, 1, 1);

select
