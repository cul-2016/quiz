{
    "getModuleForLecturer": {
        "quizzes": "SELECT quizzes.quiz_id, quizzes.name, quizzes.is_presented, ( SELECT COUNT(DISTINCT(responses.user_id)) AS num_entries FROM responses WHERE responses.quiz_id = quizzes.quiz_id GROUP BY quizzes.quiz_id ), (SELECT COUNT(questions.question_id) AS num_questions FROM questions WHERE questions.quiz_id = quizzes.quiz_id GROUP BY quizzes.quiz_id ) FROM quizzes LEFT JOIN responses ON quizzes.quiz_id = responses.quiz_id WHERE quizzes.module_id = ($1) GROUP BY quizzes.quiz_id ORDER BY quizzes.quiz_id",
        "medals": "SELECT medals.medal_name, medals.condition FROM medals WHERE medals.module_id = ($1) ORDER BY condition",
        "trophies": "SELECT trophies.trophy_name, trophies.condition FROM trophies WHERE trophies.module_id = ($1) ORDER BY trophy_name",
        "num_enrolled": "SELECT COUNT(user_id) AS num_enrolled FROM module_members WHERE module_members.module_id = ($1)",
        "name": "SELECT name FROM modules WHERE module_id = ($1)"
    },
    "getModuleForStudent": {
        "main": "SELECT modules.name, module_members.first_quiz, module_members.high_score, module_members.overall_average, module_members.participation FROM modules JOIN module_members ON modules.module_id = module_members.module_id WHERE modules.module_id = ($1) AND module_members.user_id = ($2);",
        "medals": "SELECT medal_name, condition FROM medals WHERE module_id = ($1) AND medal_name <> 'gold' ORDER BY condition"
    },
    "getQuizReview": "SELECT DISTINCT questions.quiz_id, questions.question_id, questions.question, questions.a, questions.b, questions.c, questions.d, questions.correct_answer, ( SELECT COUNT(CASE WHEN responses.response = 'a' THEN 1 end) AS a_responses FROM responses WHERE responses.question_id = questions.question_id GROUP BY responses.question_id ), ( SELECT COUNT(CASE WHEN responses.response = 'b' THEN 1 end) AS b_responses FROM responses WHERE responses.question_id = questions.question_id GROUP BY questions.question_id ), ( SELECT COUNT(CASE WHEN responses.response = 'c' THEN 1 end) AS c_responses FROM responses WHERE responses.question_id = questions.question_id GROUP BY questions.question_id ), ( SELECT COUNT(CASE WHEN responses.response = 'd' THEN 1 end) AS d_responses FROM responses WHERE responses.question_id = questions.question_id GROUP BY questions.question_id ) FROM questions LEFT JOIN responses ON questions.question_id = responses.question_id WHERE questions.quiz_id = $1 ORDER BY questions.question_id;",
    "getQuizScore": {
        "score": "SELECT COUNT(CASE WHEN responses.response = questions.correct_answer THEN 1 END) FROM responses JOIN questions ON questions.question_id = responses.question_id WHERE responses.user_id = ($1) AND responses.quiz_id = ($2);",
        "num_questions": "SELECT COUNT(question_id) FROM questions WHERE quiz_id = ($1);"
    },
    "saveStudentResponse": "INSERT INTO responses (user_id, quiz_id, question_id, response) VALUES ($1, $2, $3, $4) ON CONFLICT (user_id, quiz_id, question_id) DO UPDATE SET response = $4 WHERE (responses.user_id, responses.quiz_id, responses.question_id) = ($1, $2, $3);",
    "joinModule": "INSERT INTO module_members (module_id, user_id) VALUES ($1, $2) ON CONFLICT DO NOTHING;",
    "getFirstQuizState": "SELECT DISTINCT(user_id) FROM responses WHERE user_id = ($1) AND quiz_id = ($2);",
    "getHighScoreState": "SELECT condition FROM trophies WHERE module_id = ($1) AND trophy_name = 'high_score';",
    "getOverallAverageState": {
        "average": "SELECT AVG(percentage_score) AS overall_average FROM (SELECT quiz_id, CAST(score AS FLOAT) / CAST(num_questions AS FLOAT) * 100 as percentage_score FROM (SELECT scores.quiz_id AS quiz_id, scores.score AS score, COUNT(questions.question) AS num_questions FROM scores JOIN questions ON questions.quiz_id = scores.quiz_id JOIN quizzes ON quizzes.quiz_id = scores.quiz_id WHERE scores.user_id = ($1) AND quizzes.module_id = ($2) GROUP BY scores.quiz_id, scores.score ORDER BY scores.quiz_id) AS quiz_scores) AS averages;",
        "condition": "SELECT condition FROM trophies WHERE module_id = ($1) AND trophy_name = 'overall_average';"
    }
}
